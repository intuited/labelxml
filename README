``labelxml``
============

``labelxml`` is a Python package which serves both to get information about
and to extract data from the Grainery's de facto retail price database.

This information has been maintained in an ad hoc manner
by editing an OpenOffice Writer document.

Originally this document was meant to be only a rendering
of the canonical database, which was to be kept in a spreadsheet file.

The Writer document (an ``.odt`` file) was meant to be periodically
generated by doing a mail merge between the spreadsheet
and a labels template file.

However, this system proved impractical,
and members have taken up the practice of directly editing the .odt file.

The ``.odt`` file is structured thusly:

-   There is one label per page.
-   Some (actually many) labels are blank and do not contain inforamtion.
-   There are various fields,
    originally repleted with data from spreadsheet cells.

Installation
------------

Installing the package archive using ``easy_install``
should, at least in theory, get you a working ``labelxml``.

There are some dependencies,
notably on the external libxml2 and libxslt libraries.

You may need to install separate operating system packages for those libraries
if they are not installed by ``easy_install``.

The author has not attempted to use this system under Windows.

Data Extraction
---------------

Although ``labelxml`` has various operating modes,
most of these exist mostly for analyzing the document.

The ``dump`` command can be used to create a tab-delimited CSV file
containing extracted label data.

Dumping requires a ``content.xml`` file.  
This file can be acquired by unzipping the ``.odt`` file
using a standard ``unzip`` program.
It will be in the top level of the resulting directory.

With that file in the current directory,
this command will output the data in CSV format,
using the default settings::

    labelxml dump content.xml > label_data.csv

It's also possible to output the data in JSON format
by passing ``-o json`` on the command line.

The CSV file can be imported into openoffice calc
by opening it as a spreadsheet
and specifying that only TAB characters are used as delimiters.

Data Strategy
-------------

``labelxml`` attempts to take a conservative approach to filtering out data.

The XML format used in the ``.odt`` file contains various styled paragraphs.

These paragraphs fairly consistently tend to correlate
to fields from the original spreadsheet.

In particular, the style used for the price field is quite consistent.

This was determined by checking for ``$`` characters outside of that field.

Conveniently, this is the field of main interest for this project.

So with the default options, ``labelxml``'s ``dump`` command
will output data for all pages which contain a paragraph
with the "price" style, for which that paragraph contains text
which is not "$0.00".

``labelxml`` will make a best effort to discern
the name of that label's product.  This is not entirely consistent
but works correctly in most cases.

Also output are

-   The page number of the label in the .odt file
-   The member price field.
    This information is obsolete but may perhaps be useful in some cases.
-   The full text of the page.
    This is dumped in an unceremonious manner:
    separate lines and even words will be clumped together.
    The purpose of this data is to provide a way to fill in the blanks
    for labels which do not have discernible product names.

Other Modes of operation
------------------------

``labelxml`` has various other operating modes.

These are mostly useful to verify that the extracted data is actually correct.

Since it seems unlikely that this will be necessary,
documentation of these modes is left unwritten.

The nature of these commands may well be evident from the command help
and from the source code itself.

License
-------

``labelxml`` is licensed under the `FreeBSD license`_.

See the file COPYING for details.

.. _FreeBSD license: http://www.freebsd.org/copyright/freebsd-license.html
